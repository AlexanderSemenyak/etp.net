//----------------------------------------------------------------------- 
// ETP DevKit, 1.2
//
// Copyright 2019 Energistics
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------

namespace Energistics.Avro.Encoding
{
    public static partial class TestData
    {
        private class StringTestCase : TestCase<string>
        {
            public StringTestCase()
            {
                PrimitiveEncode = (t, encoder) => encoder.EncodeString(t.Value);
                PrimitiveDecode = (t, decoder) => decoder.DecodeString();
            }
        }


        public static TestCase<string>[] String => new TestCase<string>[] { StringTest, String0to511 };

        public static TestCase<string> StringTest => new StringTestCase
        {
            Name = nameof(StringTest),
            Value = "test",
            BinaryEncoding = new byte[] { 8, (byte)'t', (byte)'e', (byte)'s', (byte)'t' },
            BinaryByteCount = 5L,
            JsonEncoding = "\"test\"",
            JsonByteCount = 6L,
        };

        public static TestCase<string> String0to511 => new StringTestCase
        {
            Name = nameof(String0to511),
            Value = "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000B\f\r\u000E\u000F\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001A\u001B\u001C\u001D\u001E\u001F !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴǵǶǷǸǹǺǻǼǽǾǿ",
            BinaryEncoding = new byte[]
            {
                0x80, 0x0E,
                0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
                0xC2, 0x80, 0xC2, 0x81, 0xC2, 0x82, 0xC2, 0x83, 0xC2, 0x84, 0xC2, 0x85, 0xC2, 0x86, 0xC2, 0x87, 0xC2, 0x88, 0xC2, 0x89, 0xC2, 0x8A, 0xC2, 0x8B, 0xC2, 0x8C, 0xC2, 0x8D, 0xC2, 0x8E, 0xC2, 0x8F, 0xC2, 0x90, 0xC2, 0x91, 0xC2, 0x92, 0xC2, 0x93, 0xC2, 0x94, 0xC2, 0x95, 0xC2, 0x96, 0xC2, 0x97, 0xC2, 0x98, 0xC2, 0x99, 0xC2, 0x9A, 0xC2, 0x9B, 0xC2, 0x9C, 0xC2, 0x9D, 0xC2, 0x9E, 0xC2, 0x9F, 0xC2, 0xA0, 0xC2, 0xA1, 0xC2, 0xA2, 0xC2, 0xA3, 0xC2, 0xA4, 0xC2, 0xA5, 0xC2, 0xA6, 0xC2, 0xA7, 0xC2, 0xA8, 0xC2, 0xA9, 0xC2, 0xAA, 0xC2, 0xAB, 0xC2, 0xAC, 0xC2, 0xAD, 0xC2, 0xAE, 0xC2, 0xAF, 0xC2, 0xB0, 0xC2, 0xB1, 0xC2, 0xB2, 0xC2, 0xB3, 0xC2, 0xB4, 0xC2, 0xB5, 0xC2, 0xB6, 0xC2, 0xB7, 0xC2, 0xB8, 0xC2, 0xB9, 0xC2, 0xBA, 0xC2, 0xBB, 0xC2, 0xBC, 0xC2, 0xBD, 0xC2, 0xBE, 0xC2, 0xBF,
                0xC3, 0x80, 0xC3, 0x81, 0xC3, 0x82, 0xC3, 0x83, 0xC3, 0x84, 0xC3, 0x85, 0xC3, 0x86, 0xC3, 0x87, 0xC3, 0x88, 0xC3, 0x89, 0xC3, 0x8A, 0xC3, 0x8B, 0xC3, 0x8C, 0xC3, 0x8D, 0xC3, 0x8E, 0xC3, 0x8F, 0xC3, 0x90, 0xC3, 0x91, 0xC3, 0x92, 0xC3, 0x93, 0xC3, 0x94, 0xC3, 0x95, 0xC3, 0x96, 0xC3, 0x97, 0xC3, 0x98, 0xC3, 0x99, 0xC3, 0x9A, 0xC3, 0x9B, 0xC3, 0x9C, 0xC3, 0x9D, 0xC3, 0x9E, 0xC3, 0x9F, 0xC3, 0xA0, 0xC3, 0xA1, 0xC3, 0xA2, 0xC3, 0xA3, 0xC3, 0xA4, 0xC3, 0xA5, 0xC3, 0xA6, 0xC3, 0xA7, 0xC3, 0xA8, 0xC3, 0xA9, 0xC3, 0xAA, 0xC3, 0xAB, 0xC3, 0xAC, 0xC3, 0xAD, 0xC3, 0xAE, 0xC3, 0xAF, 0xC3, 0xB0, 0xC3, 0xB1, 0xC3, 0xB2, 0xC3, 0xB3, 0xC3, 0xB4, 0xC3, 0xB5, 0xC3, 0xB6, 0xC3, 0xB7, 0xC3, 0xB8, 0xC3, 0xB9, 0xC3, 0xBA, 0xC3, 0xBB, 0xC3, 0xBC, 0xC3, 0xBD, 0xC3, 0xBE, 0xC3, 0xBF,
                0xC4, 0x80, 0xC4, 0x81, 0xC4, 0x82, 0xC4, 0x83, 0xC4, 0x84, 0xC4, 0x85, 0xC4, 0x86, 0xC4, 0x87, 0xC4, 0x88, 0xC4, 0x89, 0xC4, 0x8A, 0xC4, 0x8B, 0xC4, 0x8C, 0xC4, 0x8D, 0xC4, 0x8E, 0xC4, 0x8F, 0xC4, 0x90, 0xC4, 0x91, 0xC4, 0x92, 0xC4, 0x93, 0xC4, 0x94, 0xC4, 0x95, 0xC4, 0x96, 0xC4, 0x97, 0xC4, 0x98, 0xC4, 0x99, 0xC4, 0x9A, 0xC4, 0x9B, 0xC4, 0x9C, 0xC4, 0x9D, 0xC4, 0x9E, 0xC4, 0x9F, 0xC4, 0xA0, 0xC4, 0xA1, 0xC4, 0xA2, 0xC4, 0xA3, 0xC4, 0xA4, 0xC4, 0xA5, 0xC4, 0xA6, 0xC4, 0xA7, 0xC4, 0xA8, 0xC4, 0xA9, 0xC4, 0xAA, 0xC4, 0xAB, 0xC4, 0xAC, 0xC4, 0xAD, 0xC4, 0xAE, 0xC4, 0xAF, 0xC4, 0xB0, 0xC4, 0xB1, 0xC4, 0xB2, 0xC4, 0xB3, 0xC4, 0xB4, 0xC4, 0xB5, 0xC4, 0xB6, 0xC4, 0xB7, 0xC4, 0xB8, 0xC4, 0xB9, 0xC4, 0xBA, 0xC4, 0xBB, 0xC4, 0xBC, 0xC4, 0xBD, 0xC4, 0xBE, 0xC4, 0xBF,
                0xC5, 0x80, 0xC5, 0x81, 0xC5, 0x82, 0xC5, 0x83, 0xC5, 0x84, 0xC5, 0x85, 0xC5, 0x86, 0xC5, 0x87, 0xC5, 0x88, 0xC5, 0x89, 0xC5, 0x8A, 0xC5, 0x8B, 0xC5, 0x8C, 0xC5, 0x8D, 0xC5, 0x8E, 0xC5, 0x8F, 0xC5, 0x90, 0xC5, 0x91, 0xC5, 0x92, 0xC5, 0x93, 0xC5, 0x94, 0xC5, 0x95, 0xC5, 0x96, 0xC5, 0x97, 0xC5, 0x98, 0xC5, 0x99, 0xC5, 0x9A, 0xC5, 0x9B, 0xC5, 0x9C, 0xC5, 0x9D, 0xC5, 0x9E, 0xC5, 0x9F, 0xC5, 0xA0, 0xC5, 0xA1, 0xC5, 0xA2, 0xC5, 0xA3, 0xC5, 0xA4, 0xC5, 0xA5, 0xC5, 0xA6, 0xC5, 0xA7, 0xC5, 0xA8, 0xC5, 0xA9, 0xC5, 0xAA, 0xC5, 0xAB, 0xC5, 0xAC, 0xC5, 0xAD, 0xC5, 0xAE, 0xC5, 0xAF, 0xC5, 0xB0, 0xC5, 0xB1, 0xC5, 0xB2, 0xC5, 0xB3, 0xC5, 0xB4, 0xC5, 0xB5, 0xC5, 0xB6, 0xC5, 0xB7, 0xC5, 0xB8, 0xC5, 0xB9, 0xC5, 0xBA, 0xC5, 0xBB, 0xC5, 0xBC, 0xC5, 0xBD, 0xC5, 0xBE, 0xC5, 0xBF,
                0xC6, 0x80, 0xC6, 0x81, 0xC6, 0x82, 0xC6, 0x83, 0xC6, 0x84, 0xC6, 0x85, 0xC6, 0x86, 0xC6, 0x87, 0xC6, 0x88, 0xC6, 0x89, 0xC6, 0x8A, 0xC6, 0x8B, 0xC6, 0x8C, 0xC6, 0x8D, 0xC6, 0x8E, 0xC6, 0x8F, 0xC6, 0x90, 0xC6, 0x91, 0xC6, 0x92, 0xC6, 0x93, 0xC6, 0x94, 0xC6, 0x95, 0xC6, 0x96, 0xC6, 0x97, 0xC6, 0x98, 0xC6, 0x99, 0xC6, 0x9A, 0xC6, 0x9B, 0xC6, 0x9C, 0xC6, 0x9D, 0xC6, 0x9E, 0xC6, 0x9F, 0xC6, 0xA0, 0xC6, 0xA1, 0xC6, 0xA2, 0xC6, 0xA3, 0xC6, 0xA4, 0xC6, 0xA5, 0xC6, 0xA6, 0xC6, 0xA7, 0xC6, 0xA8, 0xC6, 0xA9, 0xC6, 0xAA, 0xC6, 0xAB, 0xC6, 0xAC, 0xC6, 0xAD, 0xC6, 0xAE, 0xC6, 0xAF, 0xC6, 0xB0, 0xC6, 0xB1, 0xC6, 0xB2, 0xC6, 0xB3, 0xC6, 0xB4, 0xC6, 0xB5, 0xC6, 0xB6, 0xC6, 0xB7, 0xC6, 0xB8, 0xC6, 0xB9, 0xC6, 0xBA, 0xC6, 0xBB, 0xC6, 0xBC, 0xC6, 0xBD, 0xC6, 0xBE, 0xC6, 0xBF,
                0xC7, 0x80, 0xC7, 0x81, 0xC7, 0x82, 0xC7, 0x83, 0xC7, 0x84, 0xC7, 0x85, 0xC7, 0x86, 0xC7, 0x87, 0xC7, 0x88, 0xC7, 0x89, 0xC7, 0x8A, 0xC7, 0x8B, 0xC7, 0x8C, 0xC7, 0x8D, 0xC7, 0x8E, 0xC7, 0x8F, 0xC7, 0x90, 0xC7, 0x91, 0xC7, 0x92, 0xC7, 0x93, 0xC7, 0x94, 0xC7, 0x95, 0xC7, 0x96, 0xC7, 0x97, 0xC7, 0x98, 0xC7, 0x99, 0xC7, 0x9A, 0xC7, 0x9B, 0xC7, 0x9C, 0xC7, 0x9D, 0xC7, 0x9E, 0xC7, 0x9F, 0xC7, 0xA0, 0xC7, 0xA1, 0xC7, 0xA2, 0xC7, 0xA3, 0xC7, 0xA4, 0xC7, 0xA5, 0xC7, 0xA6, 0xC7, 0xA7, 0xC7, 0xA8, 0xC7, 0xA9, 0xC7, 0xAA, 0xC7, 0xAB, 0xC7, 0xAC, 0xC7, 0xAD, 0xC7, 0xAE, 0xC7, 0xAF, 0xC7, 0xB0, 0xC7, 0xB1, 0xC7, 0xB2, 0xC7, 0xB3, 0xC7, 0xB4, 0xC7, 0xB5, 0xC7, 0xB6, 0xC7, 0xB7, 0xC7, 0xB8, 0xC7, 0xB9, 0xC7, 0xBA, 0xC7, 0xBB, 0xC7, 0xBC, 0xC7, 0xBD, 0xC7, 0xBE, 0xC7, 0xBF,
            },
            BinaryByteCount = 898L,
            JsonEncoding = "\"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000B\\f\\r\\u000E\\u000F\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001A\\u001B\\u001C\\u001D\\u001E\\u001F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\u007F\\u0080\\u0081\\u0082\\u0083\\u0084\\u0085\\u0086\\u0087\\u0088\\u0089\\u008A\\u008B\\u008C\\u008D\\u008E\\u008F\\u0090\\u0091\\u0092\\u0093\\u0094\\u0095\\u0096\\u0097\\u0098\\u0099\\u009A\\u009B\\u009C\\u009D\\u009E\\u009F ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿĀāĂăĄąĆćĈĉĊċČčĎďĐđĒēĔĕĖėĘęĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŁłŃńŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŚśŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŹźŻżŽžſƀƁƂƃƄƅƆƇƈƉƊƋƌƍƎƏƐƑƒƓƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴǵǶǷǸǹǺǻǼǽǾǿ\"",
            JsonByteCount = 1173L,
        };
    }
}
